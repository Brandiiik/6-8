cpp

#include <iostream>
using namespace std;

// Функция для сортировки массива методом пузырька
void bubbleSort(int arr[], int n) {
    // Проходим по всем элементам массива
    for (int i = 0; i < n - 1; i++) {
        // Последний элемент на каждой итерации уже на месте
        for (int j = 0; j < n - i - 1; j++) {
            // Сравниваем соседние элементы
            if (arr[j] > arr[j + 1]) {
                // Меняем местами, если они стоят в неправильном порядке
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

// Функция для вывода массива
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int arr[] = {64, 34, 25, 12, 22, 11, 90}; // исправлено, убрана лишняя цифра
    int n = sizeof(arr) / sizeof(arr[0]);

    cout << "Исходный массив:\n";
    printArray(arr, n);

    bubbleSort(arr, n);

    cout << "Отсортированный массив:\n";
    printArray(arr, n);

    return 0;
}



python

def bubble_sort(arr):
    n = len(arr)
    # Проходим по всем элементам массива
    for i in range(n - 1):
        # последний элемент на каждой итерации уже отсортирован
        for j in range(n - i - 1):
            # сравниваем соседние элементы
            if arr[j] > arr[j + 1]:
                # меняем местами
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

def print_array(arr):
    # Вывод массива
    for num in arr:
        print(num, end=' ')
    print()

if __name__ == "__main__":
    # исходный массив
    arr = [64, 34, 25, 12, 22, 11, 90]
    print("Исходный массив:")
    print_array(arr)

    # сортируем
    bubble_sort(arr)

    print("Отсортированный массив:")
    print_array(arr)
