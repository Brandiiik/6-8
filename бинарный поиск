java

public class BinarySearch { 
    // Метод для выполнения бинарного поиска
    public static int binarySearch(int[] array, int target) {
        int left = 0; // Левая граница поиска
        int right = array.length - 1; // Правая граница поиска

        while (left <= right) {
            // Находим середину массива
            int mid = left + (right - left) / 2;

            // Проверяем средний элемент
            if (array[mid] == target) {
                return mid;  // Элемент найден
            }

            // Если искомый элемент меньше среднего
            if (array[mid] > target) {
                right = mid - 1; // Перемещаемся влево
            } else {
                left = mid + 1; // Перемещаемся вправо
            }
        }
        return -1; // Элемент не найден
    }

    public static void main(String[] args) {
        int[] sortedArray = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};
        int target = 7;

        int result = binarySearch(sortedArray, target);

        if (result != -1) {
            System.out.println("Элемент найден на позиции: " + result);
        } else {
            System.out.println("Элемент не найден");
        }
    }
}



python

def binary_search(array, target):
    left = 0
    right = len(array) - 1

    while left <= right:
        mid = left + (right - left) // 2

        if array[mid] == target:
            return mid
        elif array[mid] > target:
            right = mid - 1
        else:
            left = mid + 1

    return -1

if __name__ == "__main__":
    sorted_array = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
    target = 7

    result = binary_search(sorted_array, target)

    if result != -1:
        print(f"Элемент найден на позиции: {result}")
    else:
        print("Элемент не найден")
