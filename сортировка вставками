java

public class InsertionSort {
    // Метод для сортировки массива
    public static void insertionSort(int[] array) {
        // Проходим по всем элементам массива, начиная со второго
        for (int i = 1; i < array.length; i++) {
            int key = array[i];  // Текущий элемент, который нужно вставить
            int j = i - 1;  // Индекс предыдущего элемента
            // Перемещаем элементы array[0..i-1], которые больше key, на одну позицию вперед
            while (j >= 0 && array[j] > key) {
                array[j + 1] = array[j];
                j = j - 1;
            }
            array[j + 1] = key;  // Вставляем key на правильное место
        }
    }

    // Метод для вывода массива
    public static void printArray(int[] array) {
        for (int value : array) {
            System.out.print(value + " ");
        }
        System.out.println();
    }

    // Основной метод для тестирования
    public static void main(String[] args) {
        int[] array = {12, 11, 13, 5, 6};

        System.out.println("Исходный массив:");
        printArray(array);

        insertionSort(array);

        System.out.println("Отсортированный массив:");
        printArray(array);
    }
}



python

def insertion_sort(array):
    # Проходим по всем элементам, начиная со второго
    for i in range(1, len(array)):
        key = array[i]  # текущий элемент, который нужно вставить
        j = i - 1  # индекс предыдущего элемента
        # перемещаем элементы, которые больше key, на один позицию вперед
        while j >= 0 and array[j] > key:
            array[j + 1] = array[j]
            j -= 1
        array[j + 1] = key  # вставляем key

def print_array(array):
    # вывод элементов массива через пробел
    print(' '.join(map(str, array)))

# основной блок для тестирования
if __name__ == "__main__":
    array = [12, 11, 13, 5, 6]
    print("Исходный массив:")
    print_array(array)

    insertion_sort(array)

    print("Отсортированный массив:")
    print_array(array)
